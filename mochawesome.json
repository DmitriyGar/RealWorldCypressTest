{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 2,
    "pending": 1,
    "failures": 1,
    "testsRegistered": 4,
    "passPercent": 50,
    "pendingPercent": 25,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-09-13T14:55:53.042Z",
    "end": "2023-09-13T14:56:12.499Z",
    "duration": 19457
  },
  "results": [
    {
      "uuid": "a408fe6c-d32b-44f7-bb1a-6481daf806f2",
      "title": "",
      "fullFile": "cypress\\tests\\v2\\api\\test1.spec.js",
      "file": "cypress\\tests\\v2\\api\\test1.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "81616451-fccc-40b8-af73-6cc7a90cb73f",
          "title": "api test1",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test1 (intercept API) -> send money",
              "fullTitle": "api test1 Test1 (intercept API) -> send money",
              "timedOut": null,
              "duration": 12811,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const pay = 122;\ncy.intercept('POST', 'http://localhost:3001/transactions').as('postTransaction');\ncy.contains('.MuiButton-label', 'New').click();\ncy.get('[class=\"MuiPaper-root makeStyles-paper-54 MuiPaper-elevation0 MuiPaper-rounded\"]').then(search => {\n  cy.wrap(search).find('#user-list-search-input').type('devon');\n  cy.wrap(search).find('[data-test=\"users-list\"]').each(item => {\n    cy.wrap(item).contains('span', 'Devon Becker').click();\n    cy.get('[class=\"MuiGrid-root MuiGrid-container MuiGrid-direction-xs-column MuiGrid-align-items-xs-center\"]').find('[class=\"MuiTypography-root MuiTypography-h6 MuiTypography-colorPrimary MuiTypography-gutterBottom\"]').invoke('prop', 'innerText').should('contain', 'Devon Becker');\n  });\n  cy.get('#amount').type(pay);\n  cy.get('#transaction-create-description-input').type('test_note');\n  cy.contains('[data-test=\"transaction-create-submit-payment\"]', 'Pay').click();\n  cy.get('[class=\"MuiBox-root MuiBox-root-67\"]').find('[class=\"MuiTypography-root MuiTypography-h6 MuiTypography-colorPrimary MuiTypography-gutterBottom\"]').invoke('prop', 'innerText').should('contain', 'Paid $' + pay.toFixed(2) + ' for test_note');\n});\ncy.wait('@postTransaction');\ncy.get('@postTransaction').then(pay, xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.response.body.transaction.description).to.equal('test_note');\n  expect(xhr.response.body.transaction.amount / 100).to.equal(pay);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[class=\"MuiPaper-root makeStyles-paper-54 MuiPaper-elevation0 MuiPaper-rounded\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[class=\"MuiPaper-root makeStyles-paper-54 MuiPaper-elevation0 MuiPaper-rounded\"]`, but never found it.\n    at Context.eval (webpack://cypress-realworld-app/./cypress/tests/v2/api/test1.spec.js:15:11)",
                "diff": null
              },
              "uuid": "396eace7-8b93-4200-854d-957c8135268c",
              "parentUUID": "81616451-fccc-40b8-af73-6cc7a90cb73f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test2 (intercept API) -> mock response",
              "fullTitle": "api test1 Test2 (intercept API) -> mock response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait('@getTransaction');\ncy.get('@getTransaction').then(xhr => {\n  console.log(xhr);\n  console.log(convertAmount(xhr.response.body.results[0].amount));\n});",
              "err": {},
              "uuid": "e109f777-4851-4d5c-b478-8738e0220753",
              "parentUUID": "81616451-fccc-40b8-af73-6cc7a90cb73f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test3 (intercept API) -> router matcher",
              "fullTitle": "api test1 Test3 (intercept API) -> router matcher",
              "timedOut": null,
              "duration": 4466,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const description = 'test_note';\nconst pay = '102';\ncy.intercept('POST', '**/transactions', req => {\n  req.reply(res => {\n    expect(res.body.transaction.description).to.equal(description);\n    req.body.description = 'TEST1234';\n    res.body.transaction.description = \"TEST123\";\n  });\n}).as('postTransaction');\ncy.contains('.MuiButton-label', 'New').click();\ncy.get('[data-test=\"main\"]').find('.MuiPaper-rounded').then(search => {\n  cy.wrap(search).find('#user-list-search-input').type('devon');\n  cy.wrap(search).find('[data-test=\"users-list\"]').each(item => {\n    cy.wrap(item).contains('span', 'Devon Becker').click();\n    cy.get('[class=\"MuiGrid-root MuiGrid-container MuiGrid-direction-xs-column MuiGrid-align-items-xs-center\"]').find('[class=\"MuiTypography-root MuiTypography-h6 MuiTypography-colorPrimary MuiTypography-gutterBottom\"]').invoke('prop', 'innerText').should('contain', 'Devon Becker');\n  });\n  cy.get('#amount').type(pay);\n  cy.get('#transaction-create-description-input').type(description);\n  cy.contains('[data-test=\"transaction-create-submit-payment\"]', 'Pay').click();\n  cy.wait('@postTransaction');\n  cy.get('@postTransaction').then(xhr => {\n    cy.get('main').then(row => {\n      cy.wrap(row).find('div.MuiPaper-rounded').find('h2[class=\"MuiTypography-root MuiTypography-h6 MuiTypography-colorPrimary MuiTypography-gutterBottom\"]').eq(1).invoke('prop', 'innerText').should('contain', 'Paid $' + convertAmount(xhr.response.body.transaction.amount) + ' for ' + description);\n    });\n    console.log(xhr);\n  });\n});",
              "err": {},
              "uuid": "dd1e1d15-a831-47d1-bb60-0f20c572978e",
              "parentUUID": "81616451-fccc-40b8-af73-6cc7a90cb73f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test4 (request API) -> send request",
              "fullTitle": "api test1 Test4 (request API) -> send request",
              "timedOut": null,
              "duration": 1692,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const transId = '183VHWyuQMS';\nconst comment = 'comment12';\ncy.log('add like');\ncy.request({\n  url: 'http://localhost:3001/likes/' + transId,\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json, text/plain, */*'\n  },\n  body: `{\"transactionId\":\"183VHWyuQMS\"}`\n}).then(response => {\n  expect(response.status).to.equal(200);\n});\ncy.log('add comment');\ncy.request({\n  url: 'http://localhost:3001/comments/' + transId,\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json, text/plain, */*'\n  },\n  body: `{\"transactionId\":\"183VHWyuQMS\",\"content\":\"${comment}\"}`\n}).then(response => {\n  expect(response.status).to.equal(200);\n});\ncy.request({\n  url: 'http://localhost:3001/comments/' + transId,\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json, text/plain, */*'\n  }\n}).then(response => {\n  expect(response.status).to.equal(200);\n  //console.log(response)\n  const arr = response.body.comments;\n  expect(arr[arr.length - 1].content).to.equal(comment);\n});",
              "err": {},
              "uuid": "c72ba9a1-92e7-42dd-934f-8df31485d472",
              "parentUUID": "81616451-fccc-40b8-af73-6cc7a90cb73f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dd1e1d15-a831-47d1-bb60-0f20c572978e",
            "c72ba9a1-92e7-42dd-934f-8df31485d472"
          ],
          "failures": [
            "396eace7-8b93-4200-854d-957c8135268c"
          ],
          "pending": [
            "e109f777-4851-4d5c-b478-8738e0220753"
          ],
          "skipped": [],
          "duration": 18969,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "configFile": "reporter-config.json",
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}